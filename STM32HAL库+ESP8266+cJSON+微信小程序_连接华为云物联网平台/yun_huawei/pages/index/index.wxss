/**index.wxss
这段 CSS 代码将应用于所有类名为 "userinfo" 的 HTML 元素。它会将元素的 display 属性设置为 flex，flex-direction 属性设置为 column，align-items 属性设置为 center，字体颜色设置为紫色 (rgb(236, 24, 243))，字体大小设置为 30 像素。这意味着该元素内的所有内容都将以列的形式排列，并垂直居中显示。
**/
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: rgb(236, 24, 243);
  font-size: 30px;
}


/**看下面↓的**/
/**总的框，这段代码定义了一个名为 ".zong" 的 CSS 类，其中 "padding" 属性设置为 "15rpx"。这意味着在使用这个类的 HTML 元素中，将会有一个内边距为 15rpx 的空白区域。**/
.zong{

  padding: 15rpx;

}
/**头部
这段代码是在为一个名为 "header" 的元素定义 CSS 样式。代码中指定了以下样式：
背景颜色为蓝色的一种 (#3d7ef9)
文字颜色为白色
上下左右都有 15rpx 和 30rpx 的内边距（即上下各有 15 像素的内边距，左右各有 30 像素的内边距）
边框半径为 20rpx，使得元素的四个角都会变圆**/
.header{
  background-color: #3d7ef9;
  color: white;
  padding: 15rpx 30rpx;
  border-radius: 20rpx;
}
/**header里的第一个框one
这段代码是在为一个名为 "one" 的元素定义 CSS 样式。代码中指定了以下样式：
display: flex; 将该元素设置为使用 Flexbox 布局
justify-content: space-between; 将该容器内的元素沿主轴（Flexbox 布局中的横轴）分布到容器两侧，即左边靠近主轴起点，右边靠近主轴终点。在分布时，元素之间会留下相等的空间，使得它们之间的距离相等。
**/
.one{
  display: flex;
  justify-content: space-between;
}
/** header里的第一个框one的text .one text
这段代码是用来样式化文本元素的CSS代码。
font-size 属性设置字体大小，单位为“rpx”（即微信小程序中使用的响应式像素单位）。
height 属性将文本元素的高度设置为30rpx。
padding-bottom 属性为文本元素下方添加一些空白间隔，高度为15rpx。
总的来说，这段代码很可能是应用于微信小程序中用户界面的一组样式之一。**/
.one text{
  font-size: 26rpx;
  height: 30rpx;
  padding-bottom: 15rpx;
}
/**header里的第二个框one
和第一个框one一模一样。**/
.two{
  display: flex;
  justify-content: space-between;
}
/**header里的第二个框two的text .two text
这段代码会将所有类名为“text”的元素的字体大小设置为 52rpx，并在底部添加一个 15rpx 的填充。
**/
.two text{
  font-size: 52rpx;
  padding-bottom: 15rpx;
}
/**header里的第三个框three的text .three text
字体大小设置为 22rpx
**/
.three text{
  font-size: 22rpx;
}



/*body身体*/
/**
定义了一个名为 "onebody" 的类。它设置了一个 40rpx 的顶部外边距，并将 flexbox 显示属性应用于其元素，允许它们沿水平轴排列。"justify-content: space-between" 属性均匀地分配元素之间的空间，使每个元素之间和容器边缘之间有相等的间距。**/
.onebody{
  margin-top: 40rpx;
  display: flex;
  justify-content: space-between;
}

/**
定义了一个名为 "data" 的类。它设置了一个 flexbox 显示属性和一个背景色为 #fff，宽度为 300rpx，高度为 160rpx 的元素。此外，它还应用了一个 border-radius 为 40rpx 的圆角，并在元素周围应用了阴影效果，使其看起来有立体感。其中的 padding 属性应用于元素内部的内容，设置左右各 15rpx 的间距，以腾出更多的可视空间。justify-content: space-around 属性将元素沿着主轴均匀分布，每个元素之间的间距相等，并且在第一个元素和最后一个元素与容器之间留有一些间隔。**/
.data{
  display: flex;
  justify-content: space-around;
  background-color: #fff;
  width: 300rpx;
  height: 160rpx;
  border-radius:40rpx ;
  box-shadow: #54549c 0 0 10rpx;
  padding: 0 15rpx;
}
/**
.data-text类具有25rpx的填充，这将在任何具有此类的元素的所有边缘上添加25像素的填充。**/
.data-text{
  padding: 27rpx;
}
/**
.data-value类具有50rpx的字体大小，这将为具有此类的任何元素设置字体大小为50像素。**/
.data-value{
  font-size: 50rpx;
}
/**
.data-title类将显示设置为flex，并以列方向排列，并使内容围绕主轴对齐。该类似乎用于容纳多个数据的容器元素，因为它会垂直定位它们并均匀分布它们。**/
.data-title{
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

/**
这段 CSS 代码定义了一个名为 .data-logo 的元素的样式。display: flex; 表示将该元素设置为弹性布局，align-items: center; 表示将该元素内部子元素在垂直方向上居中对齐。这段代码通常会用于网页的头部或导航栏等位置，以便使 Logo 图片水平居中显示。**/
.data-logo{
  display: flex;
  align-items: center;
}
/**
这段 CSS 代码是在 .data-logo 元素内部的 img 标签上应用的样式。它设置了该图片的宽度和高度为 107rpx，这里的 rpx 是微信小程序中的一个相对长度单位，表示屏幕宽度的 1/750。因此，这段代码设置了该图片在微信小程序中占据屏幕宽度的 1/7.5。如果您在其他类型的网页或应用程序中使用该代码，需要使用适当的长度单位来替换 rpx。**/
.data-logo image{
  width: 107rpx;
  height: 107rpx;
}
/**
这段 CSS 代码定义了一个名为 .usermotto 的元素的样式。它设置了该元素与其上方元素之间的距离为 200px，因此该元素将在垂直方向上向下移动 200px。请注意，在不同的屏幕尺寸和设备上，200px 可能会产生不同的视觉效果，因此您可能需要根据实际情况进行调整或使用其他类型的长度单位。**/
.usermotto {
  margin-top: 200px;
}

/**index.wxss**/
.info {
  display: flex;
  flex-direction: column;
  font-size: 25px;
  align-items: center;
  color: rgb(10, 9, 9);
}
.info1 {
  display: flex;
  flex-direction: column;
  font-size: 35px;
  align-items: center;
  color: rgb(248, 13, 13);
}
.choice {
  display: flex;
  flex-direction: row;
  font-size: 25px;
  justify-content: center;
  color: rgb(212, 156, 1);
  margin-top: 40rpx;
  margin-bottom: 20rpx;
}
.btn {
  display: flex;
  flex-direction: row;
  align-items: center;
  color: rgb(141, 10, 10);
  font-size: 30px;
  margin-top: 2rpx;
}
.img {
 
  width: 120rpx;
  height: 120rpx;
  
}
image{
  width: 100%;
}
.btn {
  margin-top: 3px;
}
.set{
  height: 80rpx;
  font-size: 50rpx;
  color: rgb(0, 0, 0);
}
.tui-slider-box{
  height: 80rpx;
  line-height: 80rpx;
  width: 64%;
  color: rgb(63, 63, 63);
}
.tui-slider-head{
  height: 80rpx;
  width: 36%;
  line-height: 80rpx;
  font-size: 40rpx;
  color: rgb(63, 63, 63);
  padding-left: 20rpx;
}
.tui-content{
  display: flex;
  flex-direction: row;
  justify-content: center;
  margin-top: 8px;
  margin-bottom: 11px;
}