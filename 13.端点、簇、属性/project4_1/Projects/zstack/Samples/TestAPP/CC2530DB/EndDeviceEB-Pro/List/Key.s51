///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        25/Oct/2023  16:25:38 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\Source\Key.c                                    /
//    Command line       =  -f C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨Ð /
//                          Å¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Tes /
//                          tAPP\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cf /
//                          g (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)    /
//                          -f C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨Ð /
//                          Å¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Tes /
//                          tAPP\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.c /
//                          fg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR  /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\Users\yuan_hao\Desktop\ /
//                          ´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Project /
//                          s\zstack\Samples\TestAPP\Source\Key.c -D          /
//                          ZIGBEEPRO -D NWK_AUTO_POLL -D ZTOOL_P1 -D         /
//                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D          /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC          /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\EndDeviceEB-Pro\List\ -lA              /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\EndDeviceEB-Pro\List\ --diag_suppress  /
//                          Pe001,Pa010 -o C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î /
//                          ³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack /
//                          \Samples\TestAPP\CC2530DB\EndDeviceEB-Pro\Obj\    /
//                          -e --debug --core=plain --dptr=16,1               /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨Ð /
//                          Å¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Tes /
//                          tAPP\CC2530DB\ -I C:\Users\yuan_hao\Desktop\´óÈýÉ /
//                          Ï¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zst /
//                          ack\Samples\TestAPP\CC2530DB\..\SOURCE\ -I        /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I            /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I       /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ /
//                           -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ /
//                          ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Te /
//                          stAPP\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG /
//                          ET\CC2530EB\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿ /
//                          Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstac /
//                          k\Samples\TestAPP\CC2530DB\..\..\..\..\..\COMPONE /
//                          NTS\OSAL\MCU\CCSOC\ -I C:\Users\yuan_hao\Desktop\ /
//                          ´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Project /
//                          s\zstack\Samples\TestAPP\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\OSAL\INCLUDE\ -I                       /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\    /
//                          -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨Ð /
//                          Å¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Tes /
//                          tAPP\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK /
//                          \ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ /
//                          ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\T /
//                          estAPP\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍ /
//                          øÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples /
//                          \TestAPP\CC2530DB\..\..\..\..\..\COMPONENTS\STACK /
//                          \SAPI\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\Îï /
//                          ÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samp /
//                          les\TestAPP\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\SYS\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ /
//                          ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Sa /
//                          mples\TestAPP\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          STACK\ZDO\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³ /
//                          Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\ /
//                          Samples\TestAPP\CC2530DB\..\..\..\..\..\COMPONENT /
//                          S\ZMAC\F8W\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î /
//                          ³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack /
//                          \Samples\TestAPP\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\ZMAC\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ /
//                          ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Sa /
//                          mples\TestAPP\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          SERVICES\SADDR\ -I C:\Users\yuan_hao\Desktop\´óÈý /
//                          ÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zs /
//                          tack\Samples\TestAPP\CC2530DB\..\..\..\..\..\COMP /
//                          ONENTS\SERVICES\SDATA\ -I                         /
//                          C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\ /
//                           -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ /
//                          ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\Te /
//                          stAPP\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH /
//                          _LEVEL\ -I C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\Î /
//                          ïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Sam /
//                          ples\TestAPP\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\LOW_LEVEL\srf04\ -I C:\Users\yuan_hao\Desktop\ /
//                          ´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Project /
//                          s\zstack\Samples\TestAPP\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -Ohz  /
//    List file          =  C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼ /
//                          Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAP /
//                          P\CC2530DB\EndDeviceEB-Pro\List\Key.s51           /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Key

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP

        PUBWEAK `??Key3_ISR??INTVEC 123`
        PUBWEAK `??Key4_ISR??INTVEC 51`
        PUBWEAK `??Key5_ISR??INTVEC 107`
        PUBLIC ??KeysIntCfg?relay
        FUNCTION ??KeysIntCfg?relay,0203H
        PUBLIC ??delay?relay
        FUNCTION ??delay?relay,0203H
        PUBWEAK IEN2
        PUBLIC Key3_ISR
        FUNCTION Key3_ISR,021231H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC Key4_ISR
        FUNCTION Key4_ISR,021231H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC Key5_ISR
        FUNCTION Key5_ISR,021231H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC KeysIntCfg
        FUNCTION KeysIntCfg,0201H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK P0DIR
        PUBWEAK P0IEN
        PUBWEAK P0IFG
        PUBWEAK P0SEL
        PUBWEAK P1DIR
        PUBWEAK P1IEN
        PUBWEAK P1IFG
        PUBWEAK P1SEL
        PUBWEAK P2DIR
        PUBWEAK P2IEN
        PUBWEAK P2IFG
        PUBWEAK P2SEL
        PUBWEAK PICTL
        PUBWEAK _A_IEN0
        PUBWEAK _A_IEN1
        PUBWEAK _A_IRCON
        PUBWEAK _A_IRCON2
        PUBLIC delay
        FUNCTION delay,0201H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
osal_start_timerEx  SYMBOL "osal_start_timerEx"
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
Key3_ISR            SYMBOL "Key3_ISR"
`??Key3_ISR??INTVEC 123` SYMBOL "??INTVEC 123", Key3_ISR
Key4_ISR            SYMBOL "Key4_ISR"
`??Key4_ISR??INTVEC 51` SYMBOL "??INTVEC 51", Key4_ISR
Key5_ISR            SYMBOL "Key5_ISR"
`??Key5_ISR??INTVEC 107` SYMBOL "??INTVEC 107", Key5_ISR
KeysIntCfg          SYMBOL "KeysIntCfg"
??KeysIntCfg?relay  SYMBOL "?relay", KeysIntCfg
delay               SYMBOL "delay"
??delay?relay       SYMBOL "?relay", delay

        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN TestAPP_TaskID

// C:\Users\yuan_hao\Desktop\´óÈýÉÏ¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ\ÊµÑé\project3_1\Projects\zstack\Samples\TestAPP\Source\Key.c
//    1 #include<iocc2530.h>

        ASEGN SFR_AN:DATA:NOROOT,089H
// unsigned char volatile __sfr P0IFG
P0IFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08aH
// unsigned char volatile __sfr P1IFG
P1IFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08bH
// unsigned char volatile __sfr P2IFG
P2IFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08cH
// unsigned char volatile __sfr PICTL
PICTL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08dH
// unsigned char volatile __sfr P1IEN
P1IEN:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,09aH
// unsigned char volatile __sfr IEN2
IEN2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0abH
// unsigned char volatile __sfr P0IEN
P0IEN:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0acH
// unsigned char volatile __sfr P2IEN
P2IEN:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b8H
// union <unnamed> volatile __sfr _A_IEN1
_A_IEN1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0c0H
// union <unnamed> volatile __sfr _A_IRCON
_A_IRCON:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f5H
// unsigned char volatile __sfr P2SEL
P2SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DATA8
        DS 1
//    2 #include "TestApp.h"
//    3 #include "OSAL_Timers.h"
//    4 extern unsigned char TestAPP_TaskID;

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    5 void delay()
delay:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function delay
        CODE
//    6 {
        ; Saved register size: 0
        ; Auto size: 0
//    7    int i,j;
//    8    for(i=0;i<1000;i++)
//    9      for(j=0;j<30;j++);
//   10 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   11 void KeysIntCfg()
KeysIntCfg:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function KeysIntCfg
        CODE
//   12 {//Key3  Key4   Key5
        ; Saved register size: 0
        ; Auto size: 0
//   13      
//   14      P1SEL &=~0X02;
        ANL     0xf4,#0xfd
//   15      P1DIR &=~0X02;
        ANL     0xfe,#0xfd
//   16      IEN2|=0x10;//¿ªP1IE×éÖÐ¶Ï
        ORL     0x9a,#0x10
//   17      P1IEN|=0x02;//¿ªKey3×éÄÚÖÐ¶Ï
        ORL     0x8d,#0x2
//   18      PICTL|=0x02;//ÉèÖÃP1_1ÎªÏÂ½µÑØ
        ORL     0x8c,#0x2
//   19      
//   20      P2SEL &=~0X01;
        ANL     0xf5,#0xfe
//   21      P2DIR &=~0X01;
        ANL     0xff,#0xfe
//   22      IEN2|=0x02;
        ORL     0x9a,#0x2
//   23      P2IEN|=0x01;
        ORL     0xac,#0x1
//   24      PICTL|=0x08;//ÉèÖÃP2_0ÎªÏÂ½µÑØ
        ORL     0x8c,#0x8
//   25      
//   26      P0SEL &=~0X20;
        ANL     0xf3,#0xdf
//   27      P0DIR &=~0X20;
        ANL     0xfd,#0xdf
//   28      P0IE=1;//»òÕßÐ´³É IEN1|=0x20
        SETB    0xb8.5
//   29      P0IEN|=0x20;
        ORL     0xab,#0x20
//   30      PICTL|=0x01;//ÉèÖÃP0_5ÎªÏÂ½µÑØ
        ORL     0x8c,#0x1
//   31      
//   32      
//   33      EA=1;      //¿ª×ÜÖÐ¶Ï
        SETB    0xa8.7
//   34 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
        REQUIRE P1SEL
        REQUIRE P1DIR
        REQUIRE IEN2
        REQUIRE P1IEN
        REQUIRE PICTL
        REQUIRE P2SEL
        REQUIRE P2DIR
        REQUIRE P2IEN
        REQUIRE P0SEL
        REQUIRE P0DIR
        REQUIRE _A_IEN1
        REQUIRE P0IEN
        REQUIRE _A_IEN0
//   35 
//   36 #pragma vector=P1INT_VECTOR

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   37 __interrupt void Key3_ISR() //P1_1
Key3_ISR:
        CFI Block cfiBlock2 Using cfiCommon1
        CFI Function Key3_ISR
        CODE
//   38 {
        FUNCALL Key3_ISR, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0xe
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
//   39      
//   40      if(P1IFG & 0X02)
        MOV     A,0x8a
        MOV     C,0xE0 /* A   */.1
        JNC     ??CrossCallReturnLabel_0
//   41      {
//   42         osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,25);
        ; Setup parameters for call to function osal_start_timerEx
        LCALL   ?Subroutine1
//   43      }
//   44      P1IFG =0;
??CrossCallReturnLabel_0:
        MOV     0x8a,#0x0
//   45      P1IF=0;
        CLR     0xe8.3
        CFI EndBlock cfiBlock2
//   46 }
        REQUIRE ?Subroutine0
        REQUIRE P1IFG
        REQUIRE _A_IRCON2
        ; // Fall through to label ?Subroutine0

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock3 Using cfiCommon1
        CFI NoFunction
        CFI CFA_SP SP+-3
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI A Frame(CFA_SP, 3)
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        MOV     R7,#0x1
        LJMP    ?INTERRUPT_LEAVE_XSP
        CFI EndBlock cfiBlock3
//   47 #pragma vector=P2INT_VECTOR

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   48 __interrupt void Key4_ISR()//P2_0
Key4_ISR:
        CFI Block cfiBlock4 Using cfiCommon1
        CFI Function Key4_ISR
        CODE
//   49 {
        FUNCALL Key4_ISR, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0xe
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
//   50 
//   51      if(P2IFG & 0X01)
        MOV     A,0x8b
        MOV     C,0xE0 /* A   */.0
        JNC     ??CrossCallReturnLabel_1
//   52      { 
//   53         osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,25);
        ; Setup parameters for call to function osal_start_timerEx
        LCALL   ?Subroutine1
//   54      }
//   55      P2IFG =0;
??CrossCallReturnLabel_1:
        MOV     0x8b,#0x0
//   56      P2IF=0;
        CLR     0xe8.0
//   57 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock4
        REQUIRE P2IFG
        REQUIRE _A_IRCON2

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond5 Using cfiCommon1
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI A Frame(CFA_SP, 3)
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-3
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond6 Using cfiCommon1
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond6) A Frame(CFA_SP, 3)
        CFI (cfiCond6) R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond6) R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond6) R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond6) R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond6) R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+-3
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond7 Using cfiCommon1
        CFI (cfiCond7) NoFunction
        CFI (cfiCond7) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond7) A Frame(CFA_SP, 3)
        CFI (cfiCond7) R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond7) R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond7) R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond7) R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond7) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond7) R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond7) R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond7) R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond7) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond7) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond7) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond7) PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond7) VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond7) B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond7) CFA_SP SP+-3
        CFI (cfiCond7) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker8 Using cfiCommon1
        CFI (cfiPicker8) NoFunction
        CFI (cfiPicker8) Picker
        MOV     R4,#0x19
        MOV     R5,#0x0
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#TestAPP_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
        RET
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiCond7
        CFI EndBlock cfiPicker8
//   58 #pragma vector=P0INT_VECTOR

        RSEG NEAR_CODE:CODE:NOROOT(0)
//   59 __interrupt void Key5_ISR()//P0_5
Key5_ISR:
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function Key5_ISR
        CODE
//   60 {
        FUNCALL Key5_ISR, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0xe
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
//   61 
//   62     if(P0IFG & 0X20)
        MOV     A,0x89
        MOV     C,0xE0 /* A   */.5
        JNC     ??CrossCallReturnLabel_2
//   63     {
//   64        osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,25);
        ; Setup parameters for call to function osal_start_timerEx
        LCALL   ?Subroutine1
//   65     }
//   66      P0IFG =0;
??CrossCallReturnLabel_2:
        MOV     0x89,#0x0
//   67      P0IF=0;
        CLR     0xc0.5
//   68 }
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock9
        REQUIRE P0IFG
        REQUIRE _A_IRCON

        COMMON INTVEC:CODE:ROOT(0)
        ORG 51
`??Key4_ISR??INTVEC 51`:
        LJMP       (Key4_ISR)

        COMMON INTVEC:CODE:ROOT(0)
        ORG 107
`??Key5_ISR??INTVEC 107`:
        LJMP       (Key5_ISR)

        COMMON INTVEC:CODE:ROOT(0)
        ORG 123
`??Key3_ISR??INTVEC 123`:
        LJMP       (Key3_ISR)

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??delay?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    delay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??KeysIntCfg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    KeysIntCfg

        END
// 
// 52 bytes in segment BANKED_CODE
// 12 bytes in segment BANK_RELAYS
//  9 bytes in segment INTVEC
// 89 bytes in segment NEAR_CODE
// 18 bytes in segment SFR_AN
// 
// 153 bytes of CODE memory (+  9 bytes shared)
//   0 bytes of DATA memory (+ 18 bytes shared)
//
//Errors: none
//Warnings: none
